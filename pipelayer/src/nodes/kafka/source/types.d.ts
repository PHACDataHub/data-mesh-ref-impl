/* eslint-disable no-template-curly-in-string */
type KafkaSourceConnectorFields =
  | 'name'
  | 'connector.class'
  | 'topic'
  | 'batch.size'
  | 'csv.case.sensitive.field.names'
  | 'csv.rfc.4180.parser.enabled'
  | 'empty.poll.wait.ms'
  | 'task.count'
  | 'task.index'
  | 'error.path'
  | 'input.file.pattern'
  | 'input.path'
  | 'finished.path'
  | 'halt.on.error'
  | 'cleanup.policy'
  | 'task.partitioner'
  | 'file.buffer.size.bytes'
  | 'file.minimum.age.ms'
  | 'files.sort.attributes'
  | 'processing.file.extension'
  | 'key.schema'
  | 'value.schema'
  | 'csv.first.row.as.header'
  | 'csv.escape.char'
  | 'csv.file.charset'
  | 'csv.ignore.leading.whitespace'
  | 'csv.ignore.quotations'
  | 'csv.keep.carriage.return'
  | 'csv.null.field.indicator'
  | 'csv.quote.char'
  | 'csv.separator.char'
  | 'csv.skip.lines'
  | 'csv.strict.quotes'
  | 'csv.verify.reader'
  | 'schema.generation.enabled'
  | 'schema.generation.key.fields'
  | 'schema.generation.key.name'
  | 'schema.generation.value.name'
  | 'timestamp.field'
  | 'timestamp.mode'
  | 'parser.timestamp.date.formats'
  | 'parser.timestamp.timezone'
  | 'tasks.max'
  | 'fs.listing.class'
  | 'fs.listing.filters'
  | 'fs.listing.interval.ms'
  | 'fs.listing.task.delegation.enabled'
  | 'fs.cleanup.policy.class'
  | 'fs.cleanup.policy.triggered.on'
  | 'max.scheduled.files'
  | 'allow.tasks.reconfiguration.after.timeout.ms'
  | 'task.partitioner.class'
  | 'tasks.halt.on.error'
  | 'tasks.file.processing.order.by'
  | 'tasks.empty.poll.wait.ms'
  | 'ignore.committed.offsets'
  | 'value.connect.schema'
  | 'fs.listing.directory.path'
  | 'fs.listing.recursive.enabled'
  | 'file.filter.regex.pattern'
  | 'tasks.reader.class'
  | 'offset.policy.class'
  | 'offset.strategy'
  | 'reader.xpath.expression'
  | 'reader.xpath.result.type'
  | 'reader.xml.force.array.on.fields'
  | 'reader.xml.parser.validating.enabled'
  | 'reader.xml.parser.namespace.aware.enabled'
  | 'reader.xml.exclude.empty.elements'
  | 'reader.xml.exclude.node.attributes'
  | 'reader.xml.exclude.node.attributes.in.namespaces'
  | 'reader.xml.data.type.inference.enabled'
  | 'reader.xml.attribute.prefix'
  | 'reader.xml.content.field.name'
  | 'reader.xml.field.name.characters.regex.pattern'
  | 'reader.xml.field.name.characters.string.replacement'
  | 'reader.xml.force.content.field.for.paths'
  | 'filters'
  | 'filters.${key}'
  | 'tasks.file.status.storage.topic'
  | 'tasks.file.status.storage.bootstrap.servers'
  | 'tasks.file.status.storage.topic.partitions'
  | 'tasks.file.status.storage.topic.replication.factor'
  | 'tasks.file.status.storage.class'
