version: "3.8"

##############################################################################
#
# services
# - zookeeper
# - broker-1
# - broker-2
# - schema-registry
# - connect
# - control-center
# - ksqldb-server
# - ksqldb-cli
# - rest-proxy
# - kafkacat
#
##############################################################################
services:

  ####################
  # zookeeper
  ####################
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - backend
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: "WARN"
      ZOOKEEPER_TOOLS_LOG4J_LOGLEVEL: "ERROR"
    volumes:
      - $PWD/vol/zk/data:/var/lib/zookeeper/data
      - $PWD/vol/zk/txn-logs:/var/lib/zookeeper/log
    restart: always

  ####################
  # broker-1
  ####################
  broker-1:
    image: confluentinc/cp-kafka:7.3.1
    hostname: broker-1
    container_name: broker-1
    depends_on:
      - zookeeper
    networks:
      - backend
    ports:
      - "9093:9093"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:29092,PLAINTEXT_HOST://localhost:9092,OUTSIDE://${VM_IP}:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_LOG4J_ROOT_LOGLEVEL: "WARN"
      KAFKA_TOOLS_LOG4J_LOGLEVEL: "ERROR"
      KAFKA_LOG_RETENTION_MS: -1
      KAFKA_LOG4J_LOGGERS: org.apache.zookeeper=WARN,org.apache.kafka=WARN,kafka=WARN,kafka.cluster=WARN,kafka.controller=WARN,kafka.coordinator=WARN,kafka.log=WARN,kafka.server=WARN,kafka.zookeeper=WARN,state.change.logger=WARN
    volumes:
      - $PWD/vol/broker-1/data:/var/lib/kafka/data
    restart: always

  ####################
  # broker-2
  ####################
  broker-2:
    image: confluentinc/cp-kafka:7.3.1
    hostname: broker-2
    container_name: broker-2
    depends_on:
      - zookeeper
    networks:
      - backend
    ports:
      - "9095:9095"
      - "9094:9094"
      - "9102:9102"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-2:29094,PLAINTEXT_HOST://localhost:9094,OUTSIDE://${VM_IP}:9095
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9102
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_LOG4J_ROOT_LOGLEVEL: "WARN"
      KAFKA_TOOLS_LOG4J_LOGLEVEL: "ERROR"
      KAFKA_LOG_RETENTION_MS: -1
      KAFKA_LOG4J_LOGGERS: org.apache.zookeeper=WARN,org.apache.kafka=WARN,kafka=WARN,kafka.cluster=WARN,kafka.controller=WARN,kafka.coordinator=WARN,kafka.log=WARN,kafka.server=WARN,kafka.zookeeper=WARN,state.change.logger=WARN
    volumes:
      - $PWD/vol/broker-2/data:/var/lib/kafka/data
    restart: always

  ####################
  # schema-registry
  ####################
  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker-1
    networks:
      - backend
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker-1:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: "WARN"
      SCHEMA_REGISTRY_TOOLS_LOG4J_LOGLEVEL: "ERROR"
    restart: always

  # ####################
  # # connect
  # ####################
  # connect:
  #   image: confluentinc/cp-kafka-connect:7.3.1
  #   hostname: connect
  #   container_name: connect
  #   depends_on:
  #     - broker-1
  #     - schema-registry
  #   networks:
  #     - backend
  #   ports:
  #     - "8083:8083"
  #   environment:
  #     CONNECT_BOOTSTRAP_SERVERS: 'broker-1:29092'
  #     CONNECT_REST_PORT: 8083
  #     CONNECT_REST_ADVERTISED_HOST_NAME: connect
  #     CONNECT_GROUP_ID: compose-connect-group
  #     CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
  #     CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 2
  #     CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
  #     CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
  #     CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 2
  #     CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
  #     CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 2
  #     CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
  #     CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
  #     CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
  #     CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  #     CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     # CLASSPATH required due to CC-2422
  #     CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.3.0.jar
  #     CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
  #     CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
  #     CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
  #     CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
  #     CONNECT_LOG4J_ROOT_LOGLEVEL: "WARN"
  #     CONNECT_TOOLS_LOG4J_LOGLEVEL: "ERROR"
  #   command: 
  #     - bash 
  #     - -c 
  #     - |
  #       echo "Installing connector plugins"
  #       confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.6.0
  #       confluent-hub install --no-prompt jcustenborder/kafka-connect-spooldir:2.0.65
  #       confluent-hub install --no-prompt neo4j/kafka-connect-neo4j:5.0.2
  #       #
  #       # -----------
  #       # Launch the Kafka Connect worker
  #       /etc/confluent/docker/run &
  #       #
  #       # Don't exit
  #       sleep infinity
  #   volumes:
  #     - $PWD/data:/data
  #     - $PWD/kafka/plugins:/usr/share/confluent-hub-components
  #   restart: always

  # ####################
  # # ksqldb-server
  # ####################
  # ksqldb-server:
  #   image: confluentinc/cp-ksqldb-server:7.3.1
  #   hostname: ksqldb-server
  #   container_name: ksqldb-server
  #   depends_on:
  #     - broker-1
  #     - connect
  #   networks:
  #     - backend
  #   ports:
  #     - "8088:8088"
  #   environment:
  #     KSQL_CONFIG_DIR: "/etc/ksql"
  #     KSQL_BOOTSTRAP_SERVERS: "broker-1:29092"
  #     KSQL_HOST_NAME: ksqldb-server
  #     KSQL_LISTENERS: "http://0.0.0.0:8088"
  #     KSQL_CACHE_MAX_BYTES_BUFFERING: 0
  #     KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
  #     KSQL_KSQL_CONNECT_URL: "http://connect:8083"
  #     KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
  #     KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
  #     KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 2
  #     KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
  #     KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'
  #     KSQL_LOG4J_ROOT_LOGLEVEL: "WARN"
  #     KSQL_TOOLS_LOG4J_LOGLEVEL: "ERROR"
  #   restart: always

  # ####################
  # # ksqldb-cli
  # ####################
  # ksqldb-cli:
  #   image: confluentinc/cp-ksqldb-cli:7.3.1
  #   container_name: ksqldb-cli
  #   depends_on:
  #     - broker-1
  #     - connect
  #     - ksqldb-server
  #   networks:
  #     - backend
  #   entrypoint: /bin/sh
  #   tty: true
  #   restart: always

  # ####################
  # # rest-proxy
  # ####################
  # rest-proxy:
  #   image: confluentinc/cp-kafka-rest:7.3.1
  #   depends_on:
  #     - broker-1
  #     - schema-registry
  #   networks:
  #     - backend
  #   ports:
  #     - 8082:8082
  #   hostname: rest-proxy
  #   container_name: rest-proxy
  #   environment:
  #     KAFKA_REST_HOST_NAME: rest-proxy
  #     KAFKA_REST_BOOTSTRAP_SERVERS: 'broker-1:29092'
  #     KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
  #     KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
  #     KAFKA_REST_LOG4J_ROOT_LOGLEVEL: "WARN"
  #     KAFKA_REST_TOOLS_LOG4J_LOGLEVEL: "ERROR"
  #   restart: always

  ####################
  # kafkacat
  ####################
  kafkacat:
    image: confluentinc/cp-kcat:7.3.1
    container_name: kafkacat
    links:
      - broker-1
      # - schema-registry
    networks:
      - backend
    entrypoint: 
      - /bin/sh 
      - -c 
      - |
        apk add jq; 
        while [ 1 -eq 1 ];do sleep 60;done
    restart: always
    volumes:
      - $PWD/vol/kcat/data:/data

################################################################################
#
# networks
# - backend
#
################################################################################
networks:
  backend:
    name: backend