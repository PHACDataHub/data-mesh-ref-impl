apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cp-kafka-connect.fullname" . }}
  labels:
    app: {{ template "cp-kafka-connect.name" . }}
    chart: {{ template "cp-kafka-connect.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "cp-kafka-connect.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "cp-kafka-connect.name" . }}
        release: {{ .Release.Name }}
      {{- if or .Values.podAnnotations .Values.prometheus.jmx.enabled }}
      annotations:
      {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- if .Values.prometheus.jmx.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.prometheus.jmx.port | quote }}
      {{- end }}
      {{- end }}
    spec:
      containers:
        {{- if .Values.prometheus.jmx.enabled }}
        - name: prometheus-jmx-exporter
          image: "{{ .Values.prometheus.jmx.image }}:{{ .Values.prometheus.jmx.imageTag }}"
          imagePullPolicy: "{{ .Values.prometheus.jmx.imagePullPolicy }}"
          command:
          - java
          - -XX:+UnlockExperimentalVMOptions
          - -XX:+UseCGroupMemoryLimitForHeap
          - -XX:MaxRAMFraction=1
          - -XshowSettings:vm
          - -jar
          - jmx_prometheus_httpserver.jar
          - {{ .Values.prometheus.jmx.port | quote }}
          - /etc/jmx-kafka-connect/jmx-kafka-connect-prometheus.yml
          ports:
          - containerPort: {{ .Values.prometheus.jmx.port }}
          resources:
{{ toYaml .Values.prometheus.jmx.resources | indent 12 }}
          volumeMounts:
          - name: jmx-config
            mountPath: /etc/jmx-kafka-connect
        {{- end }}
        - name: {{ template "cp-kafka-connect.name" . }}-server
          securityContext:
            runAsUser: 0
          image: "{{ .Values.image }}:{{ .Values.imageTag }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          ports:
            - name: kafka-connect
              containerPort: {{ .Values.servicePort}}
              protocol: TCP
            {{- if .Values.prometheus.jmx.enabled }}
            - containerPort: {{ .Values.jmx.port }}
              name: jmx
            {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          env:
            - name: CONNECT_REST_ADVERTISED_HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CONNECT_BOOTSTRAP_SERVERS
              value: {{ template "cp-kafka-connect.kafka.bootstrapServers" . }}
            - name: CONNECT_GROUP_ID
              value: {{ template "cp-kafka-connect.groupId" . }}
            - name: CONNECT_PRODUCER_INTERCEPTOR_CLASSES
              value: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
            - name: CONNECT_CONSUMER_INTERCEPTOR_CLASSES
              value: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
            - name: CONNECT_LOG4J_ROOT_LOGLEVEL
              value: "{{ .Values.logLevel }}"
            - name: CONNECT_TOOLS_LOG4J_LOGLEVEL
              value: "{{ .Values.toolsLogLevel }}"
            - name: CLASSPATH
              value: "{{ .Values.classpath }}"
            - name: CONNECT_OFFSET_FLUSH_INTERVAL_MS
              value: "1000"
            - name: CONNECT_CONFIG_STORAGE_TOPIC
              value: {{ template "cp-kafka-connect.fullname" . }}-config
            - name: CONNECT_OFFSET_STORAGE_TOPIC
              value: {{ template "cp-kafka-connect.fullname" . }}-offset
            - name: CONNECT_STATUS_STORAGE_TOPIC
              value: {{ template "cp-kafka-connect.fullname" . }}-status
            - name: CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
              value: {{ template "cp-kafka-connect.cp-schema-registry.service-name" .}}
            - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
              value: {{ template "cp-kafka-connect.cp-schema-registry.service-name" .}}
            - name: jdbcConnectorVersion
              value: {{ .Values.jdbcConnectorVersion | quote }}
            - name: filePulseConnectorVersion
              value: {{ .Values.filePulseConnectorVersion | quote }}
            - name: neo4jConnectorVersion
              value: {{ .Values.neo4jConnectorVersion | quote }}
            - name: KAFKA_HEAP_OPTS
              value: "{{ .Values.heapOptions }}"
            {{- range $key, $value := .Values.configurationOverrides }}
            - name: {{ printf "CONNECT_%s" $key | replace "." "_" | upper | quote }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .Values.customEnv }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
            {{- if .Values.jmx.port }}
            - name: KAFKA_JMX_PORT
              value: "{{ .Values.jmx.port }}"
            {{- end }}
          command:
            - /bin/bash
            - -c
            - |
              echo "Installing connector plugins"
              confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:$jdbcConnectorVersion
              confluent-hub install --no-prompt streamthoughts/kafka-connect-file-pulse:$filePulseConnectorVersion
              confluent-hub install --no-prompt neo4j/kafka-connect-neo4j:$neo4jConnectorVersion
              /etc/confluent/docker/run &
              sleep infinity
          {{- if .Values.livenessProbe }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | trim | indent 12 }}
          {{- end }}
          {{- if .Values.volumeMounts }}
          volumeMounts:
{{ toYaml .Values.volumeMounts | indent 10 }}
          {{- end}}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.volumes }}
{{ toYaml .Values.volumes | trim | indent 6 }}
      {{- end}}
      {{- if .Values.prometheus.jmx.enabled }}
      - name: jmx-config
        configMap:
          name: {{ template "cp-kafka-connect.fullname" . }}-jmx-configmap
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
