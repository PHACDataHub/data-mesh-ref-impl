apiVersion: apps/v1
kind: Deployment
metadata:
  name: governance-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: governance-ui
  template:
    metadata:
      labels:
        app: governance-ui
    spec:
      enableServiceLinks: false
      serviceAccountName: job-service-account
      initContainers:
      - name: check-registry
        image: curlimages/curl
        command: ['sh', '-c', 'until curl -s --head --request GET {{ .Values.schemaRegistry.url | quote }} && curl -s --head --request GET {{ .Values.schemaRegistry.fUrl | quote }}; do echo "Waiting for Schema Registry"; sleep 5; done;']
      - name: wait-for-kafka-job
        image: bitnami/kubectl
        command: ['sh', '-c']
        args:
        - |
          until kubectl get job cp-kafka-job -o jsonpath='{.status.succeeded}' | grep 1; do
            echo "Waiting for cp-kafka-job to complete..."
            sleep 5
          done
          echo "cp-kafka-job completed"
      containers:
      - name: governance-ui
        image: northamerica-northeast1-docker.pkg.dev/phx-01he5rx4wsv/paradire/governance-ui:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        env:
        - name: BROKER_HOST
          value: {{ printf (include "cp-kafka-rest.cp-kafka-headless.fullname" .)  | quote}}
        - name: BROKER_PORT
          value: "9092"
        - name: NEXTAUTH_SECRET
          value: {{ .Values.nextauth_secret | quote }}
        - name: PT
          value: {{ .Values.pt | quote }}
        - name: NEXTAUTH_URL
          value: "http://nowhere"
        - name: HOSTNAME
          value: "0.0.0.0"
        - name: GOVERNANCE_UI_URL
          value: "https://governance.{{ .Values.pt | lower }}.paradire.phac-aspc.alpha.canada.ca"
        - name: GOVERNANCE_WS_URL
          value: "wss://governance.{{ .Values.pt | lower }}.paradire.phac-aspc.alpha.canada.ca/ws"
      - name: governance-ui-wss
        image: northamerica-northeast1-docker.pkg.dev/phx-01he5rx4wsv/paradire/governance-ui-wss:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
        env:
        - name: BROKER_HOST
          value: {{ printf (include "cp-kafka-rest.cp-kafka-headless.fullname" .)  | quote}}
        - name: BROKER_PORT
          value: "9092"
        - name: NEXTAUTH_SECRET
          value: {{ .Values.nextauth_secret | quote }}
        - name: PT
          value: {{ .Values.pt | quote }}
        - name: NEXTAUTH_URL
          value: "http://nowhere"
        - name: HOSTNAME
          value: "0.0.0.0"
        - name: GOVERNANCE_UI_URL
          value: "https://governance.{{ .Values.pt | lower }}.paradire.phac-aspc.alpha.canada.ca"
        - name: GOVERNANCE_WS_URL
          value: "wss://governance.{{ .Values.pt | lower }}.paradire.phac-aspc.alpha.canada.ca/ws"
      - name: nginx-proxy
        image: northamerica-northeast1-docker.pkg.dev/phx-01he5rx4wsv/paradire/nginx-proxy:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3080